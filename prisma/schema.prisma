// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Main table for case law data (from API search results)
model CaseLaw {
  id          String   @id @default(cuid())
  tid         Int      @unique // Original tid from API
  authorid    Int?     @map("author_id")
  bench       String?
  catids      String?  @map("cat_ids")
  docsize     Int?     @map("doc_size")
  docsource   String   @map("doc_source")
  doctype     Int?     @map("doc_type")
  fragment    Boolean? @default(false)
  headline    String?  @db.Text // Can contain HTML, so using Text
  numcitedby  Int      @default(0) @map("num_cited_by")
  numcites    Int      @default(0) @map("num_cites")
  publishdate String   @map("publish_date")
  title       String   @db.Text // Can contain HTML formatting
  
  // Additional category field for mapping docsource to category
  category    CaseCategory? // Will be populated based on docsource mapping
  
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  // Relation to detailed case data
  caseDetail CaseDetail?

  @@index([tid])
  @@index([category])
  @@index([publishdate])
  @@index([docsource])
  @@map("case_laws")
}

// Detailed table for full case document data (from individual case API)
model CaseDetail {
  id           String   @id @default(cuid())
  tid          Int      @unique // Foreign key reference
  agreement    Boolean  @default(false)
  citetid      Int?     @map("cite_tid") // Made nullable to match your data
  courtcopy    Boolean  @default(false) @map("court_copy")
  divtype      String?  @map("div_type") // Made nullable to match your data
  doc          String   @db.Text // Full HTML document content
  docsource    String   @map("doc_source")
  numcitedby   Int      @default(0) @map("num_cited_by")
  numcites     Int      @default(0) @map("num_cites")
  publishdate  String   @map("publish_date")
  queryAlert   Json?    @map("query_alert") // Using Json for flexible data (can be null)
  title        String   @db.Text
  
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  // Relation back to main case law
  caseLaw CaseLaw @relation(fields: [tid], references: [tid], onDelete: Cascade)

  @@index([tid])
  @@index([numcitedby])
  @@index([docsource])
  @@map("case_details")
}

// Enum for case categories (based on your specified options)
enum CaseCategory {
  ALL_CATEGORIES  @map("all categories")
  ITAT
  GST
  INCOME_TAX      @map("Income tax")
  HIGH_COURT      @map("High Court")
  SUPREME_COURT   @map("Supreme court")
  TRIBUNAL_COURT  @map("tribunal court")
}